@page "/authors/details/{Id:int}"
@using Blazored.Toast.Services

@inject IAuthorRepository Repo
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3>Подробнее об авторе</h3>

@if (_model == null)
{
    <LoadingPrompt Message="Загрузка данных" />
}
else
{
    <div class="col-md-4">
        <table class="table table-responsive">
            <tr>
                <td>Имя</td>
                <td>@_model.FirstName</td>
            </tr>
            <tr>
                <td>Фамилия</td>
                <td>@_model.LastName</td>
            </tr>
            <tr>
                <td>Биография</td>
                <td>@_model.Bio</td>
            </tr>
        </table>

        <br />

        @if (_model.Books == null || _model.Books.Count < 1)
        {
            <div class="alert alert-dismissible alert-secondary">
                На данный момент у данного автора нет книг
            </div>
        }
        else
        {
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <h4>Книги автора</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var book in _model.Books)
                    {
                        <li class="list-group-item"><a href="books/details/@book.Id"> @book.Title </a></li>
                    }
                </ul>
            </div>
        }

    </div>
}

<br />

<button @onclick="GoToEdit" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span>
    Редактировать автора
</button>

<button @onclick="GoToDelete" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span>
    Удалить автора
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Вернуться к списку
</button>


@code {
    [Parameter]
    public int Id { get; set; }

    private Author _model = new();

    protected override async Task OnInitializedAsync()
    {
        _model = await Repo.GetSingle(Endpoints.AuthorsEndpoint, Id);
        ToastService.ShowSuccess($"Выбран {_model.FirstName} {_model.LastName}");
    }

    private void BackToList()
    {
        NavManager.NavigateTo("/authors/");
    }

    private void GoToEdit()
    {
        NavManager.NavigateTo($"/authors/update/{_model.Id}");
    }

    private void GoToDelete()
    {
        NavManager.NavigateTo($"/authors/delete/{_model.Id}");
    }
}
