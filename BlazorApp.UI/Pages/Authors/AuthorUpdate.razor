@page "/authors/update/{Id:int}"
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Components

@inject IAuthorRepository Repo
@inject NavigationManager NavManager
@inject IToastService ToastService


<h3>Обновление информации для автора</h3>

@if (!_isSuccessful)
{
    <ErrorMessage Message="Ошибка! Что-то пошло не так..." />
}
else if (Model == null)
{
    <LoadingPrompt Message="Загрузка данных для обновления..." />
}
else
{
    <EditForm Model="Model" OnValidSubmit="UpdateAuthor">
        
        <DataAnnotationsValidator />
        
        <ValidationSummary />
        
        <div class="form-group">
            <label for="firstName">Имя</label>
            <InputText @bind-Value="@Model.FirstName" class="form-control" id="firstName" />
        </div>
        <div class="form-group">
            <label for="lastName">Фамилия</label>
            <InputText @bind-Value="@Model.LastName" class="form-control" id="lastName" />
        </div>
        <div class="form-group">
            <label for="bio">Биография</label>
            <InputTextArea @bind-Value="@Model.Bio" class="form-control" id="bio" />
        </div>

        <button class="btn btn-success" type="submit">
            <span class="oi oi-pencil"></span>
            Применить
        </button>

        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Вернуться к списку
        </button>
    </EditForm>
}



@code {
    [Parameter]
    public int Id { get; set; }

    public Author Model = new Author();

    private bool _isSuccessful = true;

    protected override async Task OnInitializedAsync()
    {
        Model = await Repo.GetSingle(Endpoints.AuthorsEndpoint, Id);
    }

    private async Task UpdateAuthor()
    {
        _isSuccessful = await Repo.Update(Endpoints.AuthorsEndpoint, Model, Model.Id);

        if(_isSuccessful)
        {
            ToastService.ShowSuccess($"Информация успешно обновлена: {Model.FirstName} {Model.LastName}");
            BackToList();
        }
        else
        {
            _isSuccessful = false;
            ToastService.ShowError("Случилась ошибка!");
        }
    }

    public void BackToList()
    {
        NavManager.NavigateTo("/authors/");
    }
}
