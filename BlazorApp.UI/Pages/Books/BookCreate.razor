@page "/books/create/"
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Components

@inject IBookRepository Repo
@inject IAuthorRepository AuthorRepo
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3>Create Book</h3>
@if(!_isSuccessful)
{
    <ErrorMessage Message="An error occurred during the operation" />
}

<EditForm Model="_model" OnValidSubmit="CreateBook">
    
    <DataAnnotationsValidator />
    
    <ValidationSummary/>
    
    <div class="form-group">
        <label for="Title">Title</label>
        <InputText @bind-Value="_model.Title" class="form-control" id="Title" />
    </div>

    <div class="form-group">
        <label for="isbn">ISBN</label>
        <InputText @bind-Value="_model.Isbn" class="form-control" id="isbn" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber @bind-Value="_model.Price" class="form-control" id="price" />
    </div>

    <div class="form-group">
        <label for="year">Year</label>
        <InputNumber @bind-Value="_model.Year" class="form-control" id="year" />
    </div>

    <div class="form-group">
        <label for="author">Authors</label>
        <select @bind="_model.AuthorId" class="form-control" id="author">
            <option value="">-- Select Author --</option>
            @if (_authors != null)
            {
                foreach (var author in _authors)
                {
                    <option value="@author.Id">@author.FirstName @author.LastName</option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <label for="summary">Summary</label>
        <InputTextArea @bind-Value="_model.Summary" class="form-control" id="summary" />
    </div>
    
    <button @onclick="CreateBook" class="btn btn-success">
        <span class="oi oi-pencil"></span>
        Submit Book
    </button>
    
    <button @onclick="BackToList" class="btn btn-warning">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>
</EditForm>


@code {
    private readonly Book _model = new();
    private IList<Author>? _authors;
    private bool _isSuccessful = true;
    bool _isSubmitting;

    protected override async Task OnInitializedAsync()
    {
        _authors = await AuthorRepo.GetAll(Endpoints.AuthorsEndpoint);
    }
    
    private async Task CreateBook()
    {
        if (_isSubmitting)
        {
            return;
        }
        _isSubmitting = true;

        try
        {
            var response = await Repo.Create(Endpoints.BooksEndpoint, _model);
            if (response != null)
            {
                ToastService.ShowSuccess("Successfully created book record");
            }
            else
            {
                _isSuccessful = false;
                ToastService.ShowError("An Error Occurred While Creating the Record!");
            }
        }
        finally
        {
            _isSubmitting = false;
        }
        
        BackToList();
    }

    private void BackToList()
    {
        NavManager.NavigateTo("/books");
    }
}