@page "/books/details/{Id:int}"
@using Blazored.Toast.Services

@inject IBookRepository Repo
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3>Подброности</h3>

@if (_model == null)
{
    <LoadingPrompt Message="Загрузка подробных данных" />
}
else
{
    <div class="col-md-4">
        <table class="table table-responsive">
            <tr>
                <td>Название</td>
                <td>@_model.Title</td>
            </tr>
            <tr>
                <td>Год</td>
                <td>@_model.Year</td>
            </tr>
            <tr>
                <td>ISBN</td>
                <td>@_model.Isbn</td>
            </tr>
            <tr>
                <td>Цена</td>
                <td>@($"{_model.Price:C}")</td>
            </tr>
            <tr>
                <td>Автор</td>
                <td>
                    <a href="authors/details/@_model.Author?.Id">
                        @_model.Author?.FirstName @_model.Author?.LastName
                    </a>
                </td>
            </tr>
            <tr>
                <td>Общее</td>
                <td>@_model.Summary</td>
            </tr>
        </table>
    </div>
}
<br/>

<button @onclick="GoToEdit" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span>
    Обновить книгу
</button>

<button @onclick="GoToDelete" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span>
    Удалить книгу
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Вернуться к списку
</button>

@code {
    [Parameter]
    public int Id { get; set; }

    private Book _model = new();

    protected override async Task OnInitializedAsync()
    {
        _model = await Repo.GetSingle(Endpoints.BooksEndpoint, Id);
        ToastService.ShowSuccess($"Сейчас просматриваете: {_model.Title}");
    }

    private void BackToList()
    {
        NavManager.NavigateTo("/books/");
    }

    private void GoToEdit()
    {
        NavManager.NavigateTo($"/books/update/{_model.Id}");
    }

    private void GoToDelete()
    {
        NavManager.NavigateTo($"/books/delete/{_model.Id}");
    }
}