@page "/books/update/{Id:int}"
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Components

@inject IBookRepository Repo
@inject IAuthorRepository AuthorRepo
@inject NavigationManager NavManager
@inject IToastService ToastService


<h3>Редактировать инфо по книге</h3>
@if (_model == null)
{
    <LoadingPrompt Message="Загрузка данных по книге..." />
}
else
{

    <EditForm Model="_model" OnValidSubmit="UpdateBook">

        <DataAnnotationsValidator />

        <ValidationSummary />

        <div class="form-group">
            <label for="title">Название</label>
            <InputText @bind-Value="@_model.Title" class="form-control" id="title" />
        </div>

        <div class="form-group">
            <label for="isbn">ISBN</label>
            <InputText @bind-Value="@_model.Isbn" class="form-control" id="isbn" />
        </div>

        <div class="form-group">
            <label for="price">Цена</label>
            <InputNumber @bind-Value="@_model.Price" class="form-control" id="price" />
        </div>

        <div class="form-group">
            <label for="year">Год</label>
            <InputNumber @bind-Value="@_model.Year" class="form-control" id="year" />
        </div>

        <div class="form-group">
            <label for="author">Авторы</label>
            <select @bind="@_model.AuthorId" class="form-control" id="author">
                <option value="">-- Выбрать автора --</option>
                @if (_authors != null)
                {
                    foreach (var author in _authors)
                    {
                        <option value="@author.Id">@author.FirstName @author.LastName</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label for="summary">Общее</label>
            <InputTextArea @bind-Value="@_model.Summary" class="form-control" id="summary" />
        </div>

        <button class="btn btn-success" type="submit">
            <span class="oi oi-pencil"></span>
            Применить
        </button>

        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Вернуться к списку
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Book _model = new();
    private IList<Author> _authors;

    private bool _isSuccessful = true;

    protected override async Task OnInitializedAsync()
    {
        _model = await Repo.GetSingle(Endpoints.BooksEndpoint, Id);
        _authors = await AuthorRepo.GetAll(Endpoints.AuthorsEndpoint);
    }

    private async Task UpdateBook()
    {
        bool _isSuccessful;
        
        _isSuccessful = await Repo.Update(Endpoints.BooksEndpoint, _model, _model.Id);
        
        if (_isSuccessful)
        {
            ToastService.ShowSuccess($"Успешно добавлена новая книга: {_model.Id} {_model.Title}");
            BackToList();
        }
        else
        {
            ToastService.ShowError("Произошла ошибка!");
        }
    }

    private void BackToList()
    {
        NavManager.NavigateTo("/books");
    }
}